"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3714],{3714:function(e,t,s){let a;s.r(t),s.d(t,{execute:function(){return l}});var r=s(375),n=s(1681);function l(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;let l=(0,n.Wg)(t.signal);return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:l}).then(async n=>{let i,o,u,c,f;if(n.data){if(n.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(i=new Blob([n.data]),"json"!==s&&"text"!==s||(a||(a=new FileReaderSync),c=a.readAsText(i),"json"!==s)))){try{o=JSON.parse(c||null)}catch(d){let b={...d,url:e,requestOptions:t};throw new r.Z("request:server",d.message,b)}if(o.error){let p={...o.error,url:e,requestOptions:t};throw new r.Z("request:server",o.error.message,p)}}}else"native"===s&&(n.data.signal=l,u=await fetch(n.data.url,n.data))}switch(s){case"blob":f=i;break;case"json":f=o;break;case"native":f=u;break;case"text":f=c;break;default:f=n.data}return{data:f,requestOptions:t,ssl:n.ssl,url:e}})}}}]);